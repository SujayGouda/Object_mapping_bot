<?xml version='1.0'?>

<robot name="ABot" xmlns:xacro="http://www.ros.org/wiki/xacro">

<xacro:include filename="$(find gazebo_demo)/urdf/ABot_kinect.xacro"/>


<!-- RGBD Camera -->
  <gazebo reference="kinect_baselink"> <!-- reference must match the name of the link in the Xacro URDF -->
    <sensor type="depth" name="kinect"> <!-- The name must be unique from all other sensor names -->
        <always_on>1</always_on>
        <update_rate>30.0</update_rate>
        <visualize>true</visualize>             
        <camera>
            <horizontal_fov>1.047</horizontal_fov>  
            <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
            </image>
            <depth_camera>

            </depth_camera>
            <clip>
                <near>0.05</near>
                <far>20</far>
            </clip>
        </camera>
             <!-- link to the camera's shared object file -->
             <plugin name="kinect_controller" filename="libgazebo_ros_openni_kinect.so">
             <alwaysOn>true</alwaysOn>
                <updateRate>30.0</updateRate>
                <!-- namespaces to avoid collision with other topics -->
                <cameraName>kinect</cameraName>
                <!-- The coordinate frame the point cloud image is published under in the tf tree -->
                <!-- Rotate this frame in urdf/xacro file if point cloud is not correctly oriented in Rviz -->
                <frameName>camera_link</frameName>
    
            <!--topic the camera will be publishing to (image, info, depth image, point cloud -->         
            <imageTopicName>/camera/image_raw</imageTopicName>
            <depthImageTopicName>/kinect/depth/image_raw</depthImageTopicName>
            <pointCloudTopicName>/kinect/depth/points</pointCloudTopicName>
            <cameraInfoTopicName>/kinect/color/camera_info</cameraInfoTopicName>              
            <depthImageCameraInfoTopicName>/kinect/depth/camera_info</depthImageCameraInfoTopicName>
         
            <pointCloudCutoff>0.4</pointCloudCutoff>                
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            <CxPrime>0.0</CxPrime>
            <Cx>0.0</Cx>
            <Cy>0.0</Cy>
            <focalLength>0.0</focalLength>
            </plugin>
    </sensor>
  </gazebo>


  <link name="base_link">
  <inertial>
    <origin xyz="0 0 0.125" />
    <mass value="5" />
    <inertia  ixx="0.1" ixy="0.0"  ixz="0.0"  iyy="0.1"  iyz="0.0"  izz="0.1" />
  </inertial>
  <visual>
    <origin xyz="0 0 0.125"/>
    <geometry>
      <box size="0.4 0.2 0.1" />
    </geometry>
  </visual>
  <collision>
    <origin xyz="0 0 0.125"/>
    <geometry>
      <box size="0.4 0.2 0.1" />
    </geometry>
  </collision>
  </link>

  <gazebo reference="base_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <link name="right_wheel">
  <inertial>
    <origin rpy="1.5707963267948966 0 0" xyz="0 0 0" />
    <mass value="0.1" />
    <inertia  ixx="0.01" ixy="0.0"  ixz="0.0"  iyy="0.01"  iyz="0.0"  izz="0.01" />
  </inertial>
  <visual>
    <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
    <geometry>
      <cylinder length="0.05" radius="0.075"/>
    </geometry>
  </visual>
  <collision>
    <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
    <geometry>
      <cylinder length="0.05" radius="0.075"/>
    </geometry>
  </collision>
  </link>

  <gazebo reference="right_wheel">
    <material>Gazebo/Black</material>
  </gazebo>

  <joint name="base_link_right_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <axis xyz="0 1 0"/>
    <origin xyz="0.1 -0.15 0.075"/>
  </joint>

  <transmission name="T_base_link_right_wheel">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="motor_1">
      <mechanicalReduction>1</mechanicalReduction>
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
    <joint name="base_link_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <link name="left_wheel">
  <inertial>
    <origin rpy="1.5707963267948966 0 0" xyz="0 0 0" />
    <mass value="0.1" />
    <inertia  ixx="0.01" ixy="0.0"  ixz="0.0"  iyy="0.01"  iyz="0.0"  izz="0.01" />
  </inertial>
  <visual>
    <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
    <geometry>
      <cylinder length="0.05" radius="0.075"/>
    </geometry>
  </visual>
  <collision>
    <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
    <geometry>
      <cylinder length="0.05" radius="0.075"/>
    </geometry>
  </collision>
  </link>

  <gazebo reference="left_wheel">
    <material>Gazebo/Black</material>
  </gazebo>

  <joint name="base_link_left_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <axis xyz="0 1 0"/>
    <origin xyz="0.1 0.15 0.075"/>
  </joint>

  <transmission name="T_base_link_left_wheel">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="motor_2">
      <mechanicalReduction>1</mechanicalReduction>
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
    <joint name="base_link_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <link name="back_wheel">
  <inertial>
    <origin rpy="1.5707963267948966 0 0" xyz="0 0 0" />
    <mass value="0.1" />
    <inertia  ixx="0.01" ixy="0.0"  ixz="0.0"  iyy="0.01"  iyz="0.0"  izz="0.01" />
  </inertial>
  <visual>
    <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
    <geometry>
      <sphere length="0.1" radius="0.025"/>
    </geometry>
  </visual>
  <collision>
    <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
    <geometry>
      <sphere length="0.1" radius="0.025"/>
    </geometry>
  </collision>
      <surface>
        <friction>
          <ode>
            <mu>0.000001</mu>
            <mu2>0.000001</mu2>
          </ode>
        </friction>
      </surface>
  </link>

   <joint name="base_link_back_wheel" type="fixed">
    <parent link="base_link"/>
    <child link="back_wheel"/>
    <axis xyz="0 1 1"/>
    <origin xyz="-0.15 0 0.025"/>
  </joint>

  <gazebo reference="back_wheel">
    <material>Gazebo/Black</material>
    <mu1>0.000001</mu1>
    <mu2>0.000001</mu2>
  </gazebo>

 

<link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

<gazebo reference="camera_link">
    <material>Gazebo/Black</material>
    <mu1>0.000001</mu1>
    <mu2>0.000001</mu2>
  </gazebo>

<link name="camera_link_2">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

<joint name="kinect_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.15 0 0.2" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="kinect_baselink"/>
  </joint>


<joint name="camera_joint" type="fixed">
    <axis xyz="0 0 0" />
    <origin xyz="0.2 0 0.175" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>

<joint name="camera_joint_2" type="fixed">
    <axis xyz="0 0 0" />
    <origin xyz="0 0 3.3" rpy="0 1.25 0"/>
    <parent link="base_link"/>
    <child link="camera_link_2"/>
  </joint>

<gazebo reference="camera_link">
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

<gazebo reference="camera_link_2">
    <sensor type="camera" name="camera_top">
      <update_rate>30.0</update_rate>
      <camera name="head_2">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>/camera_up</cameraName>
        <imageTopicName>image_raw_up</imageTopicName>
        <cameraInfoTopicName>camera_info_up</cameraInfoTopicName>
        <frameName>camera_link_2</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo> 

<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>10</updateRate>
    <leftJoint>base_link_left_wheel</leftJoint>
    <rightJoint>base_link_right_wheel</rightJoint>
    <wheelSeparation>0.35</wheelSeparation>
    <wheelDiameter>0.15</wheelDiameter>
    <torque>1.41</torque>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_link</robotBaseFrame>
    <publishWheelJointState>true</publishWheelJointState>
    <enable_odom_tf>false</enable_odom_tf>
  </plugin>
</gazebo>

  
  <xacro:property name="kinect_baselink" value="0.05" />

  <xacro:property name="camera_link" value="0.05" />

  <xacro:property name="camera_link_2" value="0.05" />

</robot>

